name: Release

on:
  push:
    tags: # run only against tags
      - '*'

permissions:
  contents: write
  packages: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    env:
      DOCKER_CLI_EXPERIMENTAL: "enabled"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Fetch all tags
        run: git fetch --force --tags

      - uses: actions/setup-go@v3
        with:
          go-version: '1.19'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Setup Syft to create SBOM
        uses:  anchore/sbom-action/download-syft@v0.14.1

      - name: Run GoReleaser check
        uses: goreleaser/goreleaser-action@v3
        with:
          version: latest
          args: check
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Git diff
        run: git diff

      - name: Login to Docker Hub
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub container Registry (GHCR)
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Release with GoReleaser
        if: startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main'
        uses: goreleaser/goreleaser-action@v3
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

